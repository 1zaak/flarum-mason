{"version":3,"sources":["webpack://@flagrow/mason/webpack/bootstrap","webpack://@flagrow/mason/./forum.js","webpack://@flagrow/mason/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@flagrow/mason/./src/forum/addComposerFields.js","webpack://@flagrow/mason/./src/forum/addFieldUpdateControl.js","webpack://@flagrow/mason/./src/forum/addFieldsOnDiscussionHero.js","webpack://@flagrow/mason/./src/forum/addFieldsOnDiscussionPost.js","webpack://@flagrow/mason/./src/forum/components/ComposerFields.js","webpack://@flagrow/mason/./src/forum/components/FieldEditDropdown.js","webpack://@flagrow/mason/./src/forum/components/FieldEditTags.js","webpack://@flagrow/mason/./src/forum/components/FieldEditText.js","webpack://@flagrow/mason/./src/forum/components/FieldGrid.js","webpack://@flagrow/mason/./src/forum/components/FieldsEditor.js","webpack://@flagrow/mason/./src/forum/components/FieldsEditorModalComposer.js","webpack://@flagrow/mason/./src/forum/components/FieldsEditorModalDiscussion.js","webpack://@flagrow/mason/./src/forum/components/FieldsViewer.js","webpack://@flagrow/mason/./src/forum/helpers/chunkArray.js","webpack://@flagrow/mason/./src/forum/helpers/verifyURL.js","webpack://@flagrow/mason/./src/forum/index.js","webpack://@flagrow/mason/./src/forum/patchModelIdentifier.js","webpack://@flagrow/mason/./src/lib/helpers/sortByAttribute.js","webpack://@flagrow/mason/./src/lib/models/Answer.js","webpack://@flagrow/mason/./src/lib/models/Field.js","webpack://@flagrow/mason/external \"flarum.core.compat['Component']\"","webpack://@flagrow/mason/external \"flarum.core.compat['Model']\"","webpack://@flagrow/mason/external \"flarum.core.compat['app']\"","webpack://@flagrow/mason/external \"flarum.core.compat['components/Button']\"","webpack://@flagrow/mason/external \"flarum.core.compat['components/CommentPost']\"","webpack://@flagrow/mason/external \"flarum.core.compat['components/Composer']\"","webpack://@flagrow/mason/external \"flarum.core.compat['components/DiscussionComposer']\"","webpack://@flagrow/mason/external \"flarum.core.compat['components/DiscussionHero']\"","webpack://@flagrow/mason/external \"flarum.core.compat['components/Modal']\"","webpack://@flagrow/mason/external \"flarum.core.compat['extend']\"","webpack://@flagrow/mason/external \"flarum.core.compat['helpers/icon']\"","webpack://@flagrow/mason/external \"flarum.core.compat['models/Discussion']\"","webpack://@flagrow/mason/external \"flarum.core.compat['models/Forum']\"","webpack://@flagrow/mason/external \"flarum.core.compat['tags/utils/sortTags']\"","webpack://@flagrow/mason/external \"flarum.core.compat['utils/DiscussionControls']\"","webpack://@flagrow/mason/external \"flarum.core.compat['utils/ItemList']\"","webpack://@flagrow/mason/external \"flarum.core.compat['utils/computed']\"","webpack://@flagrow/mason/external \"flarum.core.compat['utils/mixin']\""],"names":["expectedFieldLinesCount","fieldsCount","app","store","all","length","forum","attribute","Math","ceil","WINDOW_MOBILE_MAX_WIDTH","COMPOSER_REQUIRED_HEIGHT","FIELDS_LINE_HEIGHT","DiscussionComposer","prototype","flagrowMasonAnswers","m","prop","composerFieldsViewMode","ComposerFields","ViewModeEnum","MODAL","extend","items","canFillFlagrowMasonFields","add","component","viewMode","answers","onchange","ontagchange","tags","Composer","height","computedHeight","newViewMode","heightWithFields","$","window","width","FORM","redraw","data","relationships","console","log","DiscussionControls","discussion","canUpdateFlagrowMasonAnswers","Button","children","translator","trans","icon","onclick","modal","show","FieldsEditorModalDiscussion","DiscussionHero","props","canSeeFlagrowMasonAnswers","FieldsViewer","showFieldsOnPost","post","number","CommentPost","subtree","check","map","answer","id","join","content","postHeaderIndex","findIndex","item","attrs","className","splice","init","fieldsEditorComponent","uniqueFieldsKey","reloadFormFields","requiredFieldsCount","optionalFieldsCount","countRequiredAndOptionalFields","view","buttonTranslationKey","count_required","count_optional","FieldsEditorModalComposer","onModalAnswerChange","bind","onModalTagChange","FieldsEditor","key","forEach","field","required","Component","FieldEditDropdown","selectedAnswerIdsForThisField","suggested_answers","answerIndex","a","push","multiple","event","target","options","option","selected","value","answerId","getById","disabled","hidden","placeholderHidden","selectPlaceholder","sortByAttribute","indexOf","text","name","DiscussionFields","selectedTags","filter","tag","canAddToDiscussion","canStartDiscussion","minPrimary","maxPrimary","minSecondary","maxSecondary","isPrimary","sortTags","currentSelectedChild","sort","parent","fieldRequired","fieldLabel","withAttr","find","FieldEditText","oninput","createRecord","attributes","Model","getIdentifier","placeholder","fieldPlaceholder","FieldGrid","chunkArray","row","fields","answerToFieldIndex","onsubmit","preventDefault","headItems","toArray","fieldItems","updateSelection","fieldAnswers","reverseFieldLookup","concat","ItemList","FieldEditTags","inputAttrs","input","user_values_allowed","description","title","type","e","close","Modal","dirty","processing","answersChanged","loading","saveAnswers","save","then","err","head","fieldsItems","answer_list","show_when_empty","href","verifyURL","itemsPerChunk","R","i","slice","str","initializers","models","Field","Answer","Discussion","hasMany","Forum","addComposerFields","addFieldsOnDiscussionHero","addFieldsOnDiscussionPost","addFieldUpdateControl","patchModelIdentifier","override","original","model","exists","attr","b","apiEndpoint","mixin","is_suggested","hasOne","min_answers_count","max_answers_count","validation","deleted_at","transformDate","all_answers","computed"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./forum.js\");\n","export * from './src/forum';\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport DiscussionComposer from 'flarum/components/DiscussionComposer';\nimport Composer from 'flarum/components/Composer';\nimport FieldsEditor from './components/FieldsEditor';\nimport ComposerFields from './components/ComposerFields';\n\nfunction expectedFieldLinesCount() {\n    let fieldsCount = app.store.all('flagrow-mason-field').length;\n\n    if (app.forum.attribute('flagrow.mason.tags-as-fields')) {\n        fieldsCount++;\n    }\n\n    return Math.ceil(fieldsCount / app.forum.attribute('flagrow.mason.column-count'));\n}\n\n// The width at which the CSS triggers the change of layout\nconst WINDOW_MOBILE_MAX_WIDTH = 767;\n\n// The height to keep for the default Composer content + the fields section paddings\nconst COMPOSER_REQUIRED_HEIGHT = 300;\n\n// The expected height of a line of custom fields\n// This breaks when lines are broken by the CSS media queries !\nconst FIELDS_LINE_HEIGHT = 80;\n\nexport default function () {\n    // A Mithril prop is required because otherwise the variable reference isn't properly synced between all sub-components\n    DiscussionComposer.prototype.flagrowMasonAnswers = m.prop([]);\n\n    let composerFieldsViewMode = m.prop(ComposerFields.ViewModeEnum.MODAL);\n\n    extend(DiscussionComposer.prototype, 'headerItems', function (items) {\n        if (!app.forum.canFillFlagrowMasonFields()) {\n            return;\n        }\n        \n        items.add('flagrow-mason-fields', ComposerFields.component({\n            viewMode: composerFieldsViewMode,\n            answers: this.flagrowMasonAnswers,\n            onchange: answers => {                \n                this.flagrowMasonAnswers(answers);\n            },\n            ontagchange: tags => {\n                this.tags = tags;\n            },\n        }));\n    });\n\n    extend(Composer.prototype, 'updateHeight', function () {\n        const height = this.computedHeight();\n\n        let newViewMode = ComposerFields.ViewModeEnum.MODAL;\n\n        const heightWithFields = COMPOSER_REQUIRED_HEIGHT + expectedFieldLinesCount() * FIELDS_LINE_HEIGHT;\n\n        if ($(window).width() > WINDOW_MOBILE_MAX_WIDTH && height > heightWithFields) {\n            newViewMode = ComposerFields.ViewModeEnum.FORM;\n        }\n\n        if (newViewMode !== composerFieldsViewMode()) {\n            composerFieldsViewMode(newViewMode);\n\n            m.redraw();\n        }\n    });\n\n    extend(DiscussionComposer.prototype, 'data', function (data) {\n        if (!app.forum.canFillFlagrowMasonFields()) {\n            return;\n        }\n\n        data.relationships = data.relationships || {};\n        \n        data.relationships.flagrowMasonAnswers = this.flagrowMasonAnswers();\n        console.log('addComposerFields', data.relationships)\n    });\n}\n","import {extend} from 'flarum/extend';\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\nimport Button from 'flarum/components/Button';\nimport FieldsEditorModalDiscussion from './components/FieldsEditorModalDiscussion';\n\nexport default function () {\n    extend(DiscussionControls, 'moderationControls', function (items, discussion) {\n        if (discussion.canUpdateFlagrowMasonAnswers()) {\n            items.add('flagrow-mason-update-answers', Button.component({\n                children: app.translator.trans('flagrow-mason.forum.discussion-controls.edit-answers'),\n                icon: 'fas fa-tag',\n                onclick: () => app.modal.show(new FieldsEditorModalDiscussion({discussion})),\n            }));\n        }\n    });\n}\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport DiscussionHero from 'flarum/components/DiscussionHero';\nimport FieldsViewer from './components/FieldsViewer';\n\nexport default function () {\n    extend(DiscussionHero.prototype, 'items', function (items) {\n        console.log('addFieldsOnDiscussionHero')\n        if (!this.props.discussion.canSeeFlagrowMasonAnswers() || !app.forum.attribute('flagrow.mason.fields-in-hero')) {\n            return;\n        }\n\n        items.add('flagrow-mason-fields', FieldsViewer.component({\n            discussion: this.props.discussion,\n        }));\n    });\n}\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport CommentPost from 'flarum/components/CommentPost';\nimport FieldsViewer from './components/FieldsViewer';\n\nfunction showFieldsOnPost(post) {\n    // We only add fields to the first post, and only if fields are not displayed in the hero\n    // TODO: what if the first post is deleted ?\n    return post.number() === 1 && !app.forum.attribute('flagrow.mason.fields-in-hero');\n}\n\nexport default function () {\n    extend(CommentPost.prototype, 'init', function () {\n        \n        if (!this.props.post.discussion().canSeeFlagrowMasonAnswers() || !showFieldsOnPost(this.props.post)) {\n            return;\n        }\n\n        this.subtree.check(() => {\n            // Create a string with all answer ids\n            // If answers change this string will be different\n            return this.props.post.discussion().flagrowMasonAnswers().map(answer => answer.id()).join(',');\n        });\n    });\n\n    extend(CommentPost.prototype, 'content', function (content) {\n        if (!this.props.post.discussion().canSeeFlagrowMasonAnswers() || !showFieldsOnPost(this.props.post)) {\n            return;\n        }\n\n        const postHeaderIndex = content.findIndex(item => item.attrs && item.attrs.className === 'Post-header');\n\n        // Insert the new content just after the header\n        // or at the very beginning if the header is not found\n        content.splice(postHeaderIndex === -1 ? 0 : postHeaderIndex + 1, 0, FieldsViewer.component({\n            discussion: this.props.post.discussion(),\n        }));\n    });\n}\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport FieldsEditor from '../components/FieldsEditor';\nimport FieldsEditorModalComposer from '../components/FieldsEditorModalComposer';\n\nclass ComposerFields extends Component {\n    init() {\n        console.log('ComposerFields')\n        this.fieldsEditorComponent = null;\n        this.uniqueFieldsKey = 0;\n\n        this.reloadFormFields();\n\n        this.requiredFieldsCount = 0;\n        this.optionalFieldsCount = 0;\n\n        this.countRequiredAndOptionalFields();\n    }\n\n    view() {\n        if (this.props.viewMode === ComposerFields.ViewModeEnum.FORM) {\n            return this.fieldsEditorComponent;\n        } else {\n            return Button.component({\n                icon: 'pencil',\n                className: 'Button Mason-Composer-Button',\n                children: app.translator.trans('flagrow-mason.forum.composer-button.fill-' + this.buttonTranslationKey(), {\n                    count_required: this.requiredFieldsCount,\n                    count_optional: this.optionalFieldsCount,\n                }),\n                onclick: () => {\n                    app.modal.show(\n                        new FieldsEditorModalComposer({\n                            answers: this.props.answers(),\n                            onchange: this.onModalAnswerChange.bind(this),\n                            ontagchange: this.onModalTagChange.bind(this),\n                        })\n                    );\n                },\n            });\n        }\n    }\n\n    onModalAnswerChange(answers) {\n        this.props.onchange(answers);\n\n        this.reloadFormFields();\n    }\n\n    onModalTagChange(tags) {\n        this.props.ontagchange(tags);\n\n        this.reloadFormFields();\n    }\n\n    reloadFormFields() {\n        this.fieldsEditorComponent = FieldsEditor.component({\n            key: ++this.uniqueFieldsKey,\n            answers: this.props.answers(),\n            onchange: this.props.onchange,\n            ontagchange: this.props.ontagchange,\n        });\n    }\n\n    countRequiredAndOptionalFields() {\n        app.store.all('flagrow-mason-field').forEach(field => {\n            if (field.required()) {\n                this.requiredFieldsCount++;\n            } else {\n                this.optionalFieldsCount++;\n            }\n        });\n\n        if (app.forum.attribute('flagrow.mason.tags-as-fields')) {\n            if (app.forum.attribute('minPrimaryTags') > 0 || app.forum.attribute('minSecondaryTags') > 0) {\n                this.requiredFieldsCount++;\n            } else {\n                this.optionalFieldsCount++;\n            }\n        }\n    }\n\n    buttonTranslationKey() {\n        if (this.requiredFieldsCount && this.optionalFieldsCount) {\n            return 'required-and-optional';\n        } else if (this.requiredFieldsCount) {\n            return 'required';\n        }\n\n        return 'optional';\n    }\n}\n\nComposerFields.ViewModeEnum = {\n    FORM: 'form',\n    MODAL: 'modal',\n};\n\nexport default ComposerFields;\n","import app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport Component from 'flarum/Component';\nimport sortByAttribute from './../../lib/helpers/sortByAttribute';\n\nexport default class FieldEditDropdown extends Component {\n    init() {\n        console.log('FieldEditDropdown')\n        this.field = this.props.field;\n        this.answers = this.props.answers;\n        this.onchange = this.props.onchange;\n    }\n\n    view() {\n        let selectedAnswerIdsForThisField = [];\n\n        this.field.suggested_answers().forEach(answer => {\n            const answerIndex = this.answers.findIndex(a => {\n                // Temporary store entries seem to turn into undefined after saving\n                if (typeof a === 'undefined') {\n                    return false;\n                }\n\n                return a.id() === answer.id();\n            });\n\n            if (answerIndex !== -1) {\n                selectedAnswerIdsForThisField.push(answer.id());\n            }\n        });\n\n        return m('span.Select', [\n            m('select.Select-input.FormControl', {\n                multiple: this.field.multiple(),\n                onchange: event => {\n                    let answers = [];\n\n                    for (let option of event.target.options) {\n                        if (option.selected && option.value !== 'none') {\n                            const answerId = option.value;\n\n                            // This will only work with suggested answers for now\n                            // As they are the only ones registered in the store\n                            answers.push(app.store.getById('flagrow-mason-answer', answerId));\n                        }\n                    }\n\n                    this.onchange(answers);\n                },\n            }, [\n                (this.field.multiple() ? null : m('option', {\n                    value: 'none',\n                    selected: selectedAnswerIdsForThisField.length === 0,\n                    disabled: this.field.required(),\n                    hidden: this.placeholderHidden(),\n                }, this.selectPlaceholder())),\n                sortByAttribute(this.field.suggested_answers()).map(\n                    answer => m('option', {\n                        value: answer.id(),\n                        selected: selectedAnswerIdsForThisField.indexOf(answer.id()) !== -1,\n                    }, answer.content())\n                ),\n            ]),\n            icon('fas fa-caret-down', {className: 'Select-caret'}),\n        ]);\n    }\n\n    placeholderHidden() {\n        // If labels are hidden, we need to always show the default value (even if it can't be selected)\n        // Otherwise when the field is \"required\" you can't find the name of the field anymore once something is selected\n        if (app.forum.attribute('flagrow.mason.labels-as-placeholders')) {\n            return false;\n        }\n\n        return this.field.required();\n    }\n\n    selectPlaceholder() {\n        let text = '';\n\n        if (app.forum.attribute('flagrow.mason.labels-as-placeholders')) {\n            text += this.field.name();\n\n            if (this.field.required()) {\n                text+= ' *';\n            }\n\n            text += ' - ';\n        }\n\n        if (this.field.required()) {\n            text += app.translator.trans('flagrow-mason.forum.answers.choose-option');\n        } else {\n            text += app.translator.trans('flagrow-mason.forum.answers.no-option-selected');\n        }\n\n        return text;\n    }\n}\n","import app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport Component from 'flarum/Component';\nimport sortTags from 'flarum/tags/utils/sortTags';\n\nexport default class DiscussionFields extends Component {\n    init() {\n        console.log('FieldEditTags')\n        this.tags = app.store.all('tags');\n        this.selectedTags = [];\n\n        if (this.props.discussion) {\n            this.tags = this.tags.filter(tag => tag.canAddToDiscussion() || this.props.discussion.tags().indexOf(tag) !== -1);\n\n            this.selectedTags = this.props.discussion.tags();\n        } else {\n            this.tags = this.tags.filter(tag => tag.canStartDiscussion());\n        }\n\n        this.minPrimary = app.forum.attribute('minPrimaryTags');\n        this.maxPrimary = app.forum.attribute('maxPrimaryTags');\n        this.minSecondary = app.forum.attribute('minSecondaryTags');\n        this.maxSecondary = app.forum.attribute('maxSecondaryTags');\n\n        // If primary tags are disabled, don't offer them\n        if (this.maxPrimary <= 0) {\n            this.tags = this.tags.filter(tag => !tag.isPrimary());\n        }\n\n        // If secondary tags are disabled, don't offer them\n        if (this.maxSecondary <= 0) {\n            this.tags = this.tags.filter(tag => tag.isPrimary());\n        }\n\n        this.tags = sortTags(this.tags);\n    }\n\n    view() {\n        if (this.maxPrimary > 1 || this.maxSecondary > 1) {\n            return m('.Alert', app.translator.trans('flagrow-mason.forum.tags.inadequate-settings'));\n        }\n\n        // We take the first child selected or if none, the first parent selected\n        // Of course this only works if a single tag or tag+parent is selected\n        // Multiple tags are not supported on this selector\n        const currentSelectedChild = this.selectedTags.length ? this.selectedTags.sort(tag => tag.parent() ? -1 : 1)[0].id() : null;\n\n        const required = this.fieldRequired();\n\n        return m('.Mason-Field.Form-group', {\n            className: app.forum.attribute('flagrow.mason.labels-as-placeholders') ? 'Mason-Field--label-as-placeholder' : '',\n        }, [\n            m('label', this.fieldLabel()),\n            m('span.Select', [\n                m('select.Select-input.FormControl', {\n                    onchange: m.withAttr('value', id => {\n                        this.selectedTags = [];\n\n                        if (id !== 'none') {\n                            this.selectedTags.push(this.tags.find(tag => tag.id() === id));\n\n                            const parent = this.selectedTags[0].parent();\n                            if (parent) {\n                                this.selectedTags.push(parent);\n                            }\n                        }\n\n                        this.props.onchange(this.selectedTags);\n                    }),\n                }, [\n                    m('option', {\n                        value: 'none',\n                        selected: this.selectedTags.length === 0,\n                        disabled: required,\n                        hidden: this.placeholderHidden(),\n                    }, this.selectPlaceholder()),\n                    this.tags.map(\n                        tag => {\n                            const parent = tag.parent();\n\n                            return m('option', {\n                                value: tag.id(),\n                                selected: tag.id() === currentSelectedChild,\n                            }, (parent ? parent.name() + ' | ' : '') + tag.name());\n                        }\n                    ),\n                ]),\n                icon('fas fa-caret-down', {className: 'Select-caret'}),\n            ]),\n        ]);\n    }\n\n    fieldRequired() {\n        return this.minPrimary > 0 || this.minSecondary > 0;\n    }\n\n    fieldLabel() {\n        let text = app.forum.attribute('flagrow.mason.tags-field-name') || app.translator.trans('flagrow-mason.forum.tags.tags-label');\n\n        if (this.fieldRequired()) {\n            text += ' *';\n        }\n\n        return text;\n    }\n\n    placeholderHidden() {\n        if (app.forum.attribute('flagrow.mason.labels-as-placeholders')) {\n            return false;\n        }\n\n        return this.fieldRequired();\n    }\n\n    selectPlaceholder() {\n        let text = '';\n\n        if (app.forum.attribute('flagrow.mason.labels-as-placeholders')) {\n            text += this.fieldLabel() + ' - ';\n        }\n\n        if (this.fieldRequired()) {\n            text += app.translator.trans('flagrow-mason.forum.answers.choose-option');\n        } else {\n            text += app.translator.trans('flagrow-mason.forum.answers.no-option-selected');\n        }\n\n        return text;\n    }\n}\n","import app from 'flarum/app';\nimport Model from 'flarum/Model';\nimport Component from 'flarum/Component';\n\nexport default class FieldEditText extends Component {\n    init() {\n        this.field = this.props.field;\n        this.answers = this.props.answers;\n        console.log('FieldEditText')\n        this.onchange = this.props.onchange;\n\n        this.content = '';\n\n        // const answersForThisField = this.answers.filter(answer => {\n        //     // Temporary store entries seem to turn into undefined after saving\n        //     if (typeof answer === 'undefined') {\n        //         return false;\n        //     }\n\n        //     return answer.field().id() === this.field.id();\n        // });\n\n        // if (answersForThisField.length) {\n        //     // For now we only support a single custom answer\n        //     this.content = answersForThisField[0].content();\n        // }\n    }\n\n    view() {\n        return m('input.FormControl', {\n            required: this.field.required(),\n            value: this.content,\n            oninput: m.withAttr('value', value => {\n                this.content = value;\n                \n                if (this.content === '') {\n                    this.onchange([]);\n                } else {\n                    const answer = app.store.createRecord('flagrow-mason-answer', {\n                        attributes: {\n                            content: this.content,\n                        },\n                        relationships: {\n                            field: {\n                                data: Model.getIdentifier(this.field),\n                            },\n                        },\n                    });\n                    \n                    this.onchange([answer]);\n                }\n            }),\n            placeholder: this.fieldPlaceholder(),\n        });\n    }\n\n    fieldPlaceholder() {\n        if (app.forum.attribute('flagrow.mason.labels-as-placeholders')) {\n            return this.field.name() + (this.field.required() ? ' *' : '');\n        }\n\n        return '';\n    }\n}\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport chunkArray from './../helpers/chunkArray';\n\nexport default class FieldGrid extends Component {\n    view() {\n        return m('.Mason-Grid-Wrapper', m('.Mason-Grid', chunkArray(this.props.items, app.forum.attribute('flagrow.mason.column-count')).map(\n            row => m('.Mason-Row', row.map(\n                item => m('.Mason-Column', item)\n            ))\n        )));\n    }\n}\n","import app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport ItemList from 'flarum/utils/ItemList';\nimport Component from 'flarum/Component';\nimport sortByAttribute from './../../lib/helpers/sortByAttribute';\nimport FieldEditDropdown from './FieldEditDropdown';\nimport FieldEditText from './FieldEditText';\nimport FieldEditTags from './FieldEditTags';\nimport FieldGrid from './FieldGrid';\n\nexport default class FieldsEditor extends Component {\n    init() {\n        console.log('FieldsEditor')\n        this.fields = sortByAttribute(app.store.all('flagrow-mason-field'));\n\n        // Index to quickly do a reverse lookup from answer to field\n        this.answerToFieldIndex = [];\n        this.fields.forEach(\n            field => {\n                field.suggested_answers().forEach(\n                    answer => {\n                        this.answerToFieldIndex[answer.id()] = field.id();\n                    }\n                );\n            }\n        );        \n    }\n\n    view() {\n        return m('form.Mason-Fields.Mason-Fields--editor', {\n            onsubmit(event) {\n                event.preventDefault();\n            },\n        }, [\n            this.headItems().toArray(),\n            FieldGrid.component({\n                items: this.fieldItems().toArray(),\n            }),\n        ]);\n    }\n\n    updateSelection(field, fieldAnswers) {\n        // Keep only answers to other fields\n        let answers = this.props.answers.filter(\n            answer => {\n                const reverseFieldLookup = this.answerToFieldIndex[answer.id()];\n\n                // If the answer is not in the reverse lookup table it's probably a non-suggested (user) answer\n                // In that case the field should be linked in the relationship\n                if (typeof reverseFieldLookup === 'undefined') {\n                    return answer.field().id() !== field.id();\n                }\n\n                return reverseFieldLookup !== field.id();\n            }\n        );\n\n        answers = answers.concat(fieldAnswers);\n        console.log('answers', answers)\n        this.props.onchange(answers);\n    }\n\n    headItems() {\n        const items = new ItemList();\n\n        if (app.forum.attribute('flagrow.mason.fields-section-title')) {\n            items.add('title', m('h5.Mason-Field--title', app.forum.attribute('flagrow.mason.fields-section-title')));\n        }\n\n        return items;\n    }\n\n    fieldItems() {\n        const items = new ItemList();\n\n        if (app.forum.attribute('flagrow.mason.tags-as-fields')) {\n            items.add('tags', FieldEditTags.component({\n                discussion: this.props.discussion,\n                onchange: tags => {\n                    if (this.props.ontagchange) {\n                        this.props.ontagchange(tags);\n                    }\n                },\n            }));\n        }\n\n        this.fields.forEach(field => {\n            const inputAttrs = {\n                field,\n                answers: this.props.answers,\n                onchange: fieldAnswers => {\n                    // Every input component calls \"onchange\" with a list of answers from the store\n                    this.updateSelection(field, fieldAnswers);\n                },\n            };\n            let input = null;\n\n            if (field.user_values_allowed()) {\n                input = FieldEditText.component(inputAttrs);\n            } else {\n                input = FieldEditDropdown.component(inputAttrs);\n            }\n\n            items.add('field-' + field.id(), m('.Mason-Field.Form-group', {\n                className: app.forum.attribute('flagrow.mason.labels-as-placeholders') ? 'Mason-Field--label-as-placeholder' : '',\n            }, [\n                m('label', [\n                    (field.icon() ? [icon(field.icon()), ' '] : null),\n                    field.name(),\n                    (field.required() ? ' *' : null),\n                ]),\n                input,\n                (field.description() ? m('.helpText', field.description()) : null),\n            ]));\n        });\n        \n        return items;\n    }\n}\n","import app from 'flarum/app';\nimport Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport FieldsEditor from '../components/FieldsEditor';\n\nexport default class FieldsEditorModalComposer extends Modal {\n    title() {\n        return app.translator.trans('flagrow-mason.forum.answers-modal.create-title');\n    }\n\n    content() {\n        return [\n            m('.Modal-body', FieldsEditor.component({\n                answers: this.props.answers,\n                onchange: this.props.onchange,\n                ontagchange: this.props.ontagchange,\n            })),\n            m('.Modal-footer', [\n                Button.component({\n                    className: 'Button Button--primary',\n                    type: 'submit',\n                    children: app.translator.trans('flagrow-mason.forum.answers-modal.save'),\n                }),\n            ]),\n        ];\n    }\n\n    onsubmit(e) {\n        console.log('FieldsEditorModalComposer', this.props)\n        e.preventDefault();\n\n        app.modal.close();\n    }\n}","import app from 'flarum/app';\nimport Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport FieldsEditor from './FieldsEditor';\n\nexport default class FieldsEditorModalDiscussion extends Modal {\n    init() {\n        super.init();\n\n        this.answers = this.props.discussion.flagrowMasonAnswers();\n        this.dirty = false;\n        this.processing = false;\n\n        // Stays null if the feature is not used\n        this.tags = null;\n        console.log('FieldsEditorModalDiscussion')\n    }\n\n    title() {\n        return app.translator.trans('flagrow-mason.forum.answers-modal.edit-title', {\n            title: m('em', this.props.discussion.title()),\n        });\n    }\n\n    content() {\n        return [\n            m('.Modal-body', FieldsEditor.component({\n                discussion: this.props.discussion, // Only for the tags feature\n                answers: this.answers,\n                onchange: this.answersChanged.bind(this),\n                ontagchange: tags => {\n                    this.tags = tags;\n                    this.dirty = true;\n                },\n            })),\n            m('.Modal-footer', [\n                Button.component({\n                    className: 'Button Button--primary',\n                    children: app.translator.trans('flagrow-mason.forum.answers-modal.save'),\n                    loading: this.processing,\n                    disabled: !this.dirty,\n                    onclick: this.saveAnswers.bind(this),\n                }),\n            ]),\n        ];\n    }\n\n    answersChanged(answers) {\n        this.answers = answers;\n        this.dirty = true;\n    }\n\n    saveAnswers() {\n        this.processing = true;\n\n        let relationships = {\n            flagrowMasonAnswers: this.answers,\n        };\n\n        // If tag edit is enabled, take care of them here as well\n        if (this.tags !== null) {\n            relationships.tags = this.tags;\n        }\n\n        this.props.discussion.save({\n            relationships,\n        }).then(() => {\n            this.processing = false;\n            app.modal.close();\n            m.redraw();\n        }).catch(err => {\n            this.processing = false;\n            throw err;\n        });\n    }\n}\n","import app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport ItemList from 'flarum/utils/ItemList';\nimport Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport FieldsEditorModalDiscussion from './FieldsEditorModalDiscussion';\nimport FieldGrid from './FieldGrid';\nimport sortByAttribute from './../../lib/helpers/sortByAttribute';\nimport verifyURL from '../helpers/verifyURL';\n\nexport default class FieldsViewer extends Component {\n    init() {\n        this.fields = sortByAttribute(app.store.all('flagrow-mason-field'));    \n        this.answers = sortByAttribute(app.store.all('flagrow-mason-answer'));        \n        this.discussion = this.props.discussion;\n        console.log('FieldsViewer')\n    }\n\n    view() {\n        const head = this.headItems().toArray();\n        const fields = this.fieldsItems().toArray();\n        \n        // If all fields are hidden\n        // And either no controls are shown or the setting hides them\n        // We don't show the viewer\n        if (!fields.length && (!head.length || app.forum.attribute('flagrow.mason.hide-empty-fields-section'))) {\n            // We need to return an actual dom element or Flarum does not like it\n            return m('div');\n        }\n\n        return m('.Mason-Fields.Mason-Fields--viewer', [\n            head,\n            FieldGrid.component({\n                items: fields,\n            }),\n        ]);\n    }\n\n    headItems() {\n        const items = new ItemList();\n\n        if (this.discussion.canUpdateFlagrowMasonAnswers()) {\n            items.add('edit', Button.component({\n                className: 'Button Mason-Fields--edit',\n                children: app.translator.trans('flagrow-mason.forum.discussion-controls.edit-answers'),\n                icon: 'fas fa-pen',\n                onclick: () => app.modal.show(new FieldsEditorModalDiscussion({\n                    discussion: this.discussion,\n                })),\n            }));\n        }\n\n        if (app.forum.attribute('flagrow.mason.fields-section-title')) {\n            items.add('title', m('h5.Mason-Field--title', app.forum.attribute('flagrow.mason.fields-section-title')));\n        }\n\n        return items;\n    }\n\n    fieldsItems() {\n        const items = new ItemList();\n        \n        this.fields.forEach(field => {     \n            \n            // Discussion answers to this field\n            const answers = sortByAttribute(this.discussion.flagrowMasonAnswers().filter(answer => {\n                // It's necessary to compare the field() relationship\n                // Because field.suggested_answers() won't contain new and user answers\n                return answer.field().id() === field.id();\n            }));\n            \n            let answer_list = answers.map(answer => m('span.Mason-Inline-Answer', answer.content()));\n\n            if (answers.length === 0) {\n                if (field.show_when_empty()) {\n                    answer_list.push(m('em.Mason-Inline-Answer', app.translator.trans('flagrow-mason.forum.post-answers.no-answer')));\n                } else {\n                    // console.log('will return', field.name())\n                    // If the field has no answer and the setting is off we don't show it\n                    return;\n                }\n            }            \n                        \n            \n            if (field.name() == 'Deal URL') {  \n                items.add('field-' + field.id(), m('.Mason-Field.Form-group', [\n                    m('label', [\n                        (field.icon() ? [icon(field.icon()), ' '] : null),\n                        field.name(),\n                    ]),\n                    m('a',{href: verifyURL(answer_list[0].children[0]), class:'.FormControl.Mason-Inline-Answers', target: '_blank'}, 'Go To Site')                    \n                    \n                ]));\n            } else {\n                items.add('field-' + field.id(), m('.Mason-Field.Form-group', [\n                    m('label', [\n                        (field.icon() ? [icon(field.icon()), ' '] : null),\n                        field.name(),\n                    ]),\n                    m('.FormControl.Mason-Inline-Answers', answer_list),\n                ]));\n            }            \n\n        });\n\n        return items;\n    }    \n}\n","/**\n * Split an array into multiple arrays of a given size\n * Useful for grid layouts\n * @see https://stackoverflow.com/a/10456644/3133038\n * @param {Array} items\n * @param {number} itemsPerChunk\n * @returns {Array}\n */\nexport default function (items, itemsPerChunk) {\n    let R = [];\n    for (let i = 0; i < items.length; i += itemsPerChunk) {\n        R.push(items.slice(i, i + itemsPerChunk));\n    }\n    return R;\n}\n","/**\n * Verify a basic URL \n * @param {String} str\n * @returns {String}\n */\nexport default function (str) {\n    return str.slice(0, 5) == 'http' || 'https' ? str : '#'\n}\n","import app from 'flarum/app';\nimport Model from 'flarum/Model';\nimport Discussion from 'flarum/models/Discussion';\nimport Forum from 'flarum/models/Forum';\nimport Answer from './../lib/models/Answer';\nimport Field from './../lib/models/Field';\nimport addComposerFields from './addComposerFields';\nimport addFieldUpdateControl from './addFieldUpdateControl';\nimport addFieldsOnDiscussionHero from './addFieldsOnDiscussionHero';\nimport addFieldsOnDiscussionPost from './addFieldsOnDiscussionPost';\nimport patchModelIdentifier from \"./patchModelIdentifier\";\n\napp.initializers.add('flagrow-mason', app => {\n    app.store.models['flagrow-mason-field'] = Field;\n    app.store.models['flagrow-mason-answer'] = Answer;\n\n    Discussion.prototype.flagrowMasonAnswers = Model.hasMany('flagrowMasonAnswers');\n    Discussion.prototype.canSeeFlagrowMasonAnswers = Model.attribute('canSeeFlagrowMasonAnswers');\n    Discussion.prototype.canUpdateFlagrowMasonAnswers = Model.attribute('canUpdateFlagrowMasonAnswers');\n    Forum.prototype.canFillFlagrowMasonFields = Model.attribute('canFillFlagrowMasonFields');\n\n    addComposerFields();\n    addFieldsOnDiscussionHero();\n    addFieldsOnDiscussionPost();\n    addFieldUpdateControl();\n    patchModelIdentifier();\n});\n","import {override} from 'flarum/extend';\nimport Model from 'flarum/Model';\nimport Answer from './../lib/models/Answer';\n\nexport default function () {\n    override(Model, 'getIdentifier', function (original, model) {\n        // For Answers that don't yet exist, we include the content and the field relationship when calling the API\n        // That way they can be created server-side without making individual API requests for each answer\n        if (model instanceof Answer && !model.exists) {\n            return {\n                type: model.data.type,\n                attributes: {\n                    content: model.data.attributes.content,\n                },\n                relationships: {\n                    field: {\n                        data: Model.getIdentifier(model.data.relationships.field),\n                    },\n                },\n            };\n        }\n\n        // Default behaviour\n        return original(model);\n    })\n}\n","export default function (items, attr = 'sort') {\n    return items.sort(\n        (a, b) => a[attr]() - b[attr]()\n    );\n}\n","import app from 'flarum/app';\nimport Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class Answer extends mixin(Model, {\n    content: Model.attribute('content'),\n    is_suggested: Model.attribute('is_suggested'),\n    sort: Model.attribute('sort'),\n    field: Model.hasOne('field'),\n}) {\n    /**\n     * @inheritDoc\n     */\n    apiEndpoint() {\n        return '/flagrow/mason/answers' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","import app from 'flarum/app';\nimport Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\nimport computed from 'flarum/utils/computed';\n\nexport default class Field extends mixin(Model, {\n    name: Model.attribute('name'),\n    description: Model.attribute('description'),\n    min_answers_count: Model.attribute('min_answers_count'),\n    max_answers_count: Model.attribute('max_answers_count'),\n    show_when_empty: Model.attribute('show_when_empty'),\n    user_values_allowed: Model.attribute('user_values_allowed'),\n    validation: Model.attribute('validation'),\n    icon: Model.attribute('icon'),\n    sort: Model.attribute('sort'),\n    deleted_at: Model.attribute('deleted_at', Model.transformDate),\n    all_answers: Model.hasMany('all_answers'),\n    suggested_answers: Model.hasMany('suggested_answers'),\n    required: computed('min_answers_count', min_answers_count => min_answers_count > 0),\n    multiple: computed('max_answers_count', max_answers_count => max_answers_count > 1),\n}) {\n    /**\n     * @inheritDoc\n     */\n    apiEndpoint() {\n        return '/flagrow/mason/fields' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/CommentPost'];","module.exports = flarum.core.compat['components/Composer'];","module.exports = flarum.core.compat['components/DiscussionComposer'];","module.exports = flarum.core.compat['components/DiscussionHero'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['models/Discussion'];","module.exports = flarum.core.compat['models/Forum'];","module.exports = flarum.core.compat['tags/utils/sortTags'];","module.exports = flarum.core.compat['utils/DiscussionControls'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['utils/computed'];","module.exports = flarum.core.compat['utils/mixin'];"],"sourceRoot":""}