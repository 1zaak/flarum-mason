{"version":3,"sources":["webpack://@flagrow/mason/webpack/bootstrap","webpack://@flagrow/mason/./admin.js","webpack://@flagrow/mason/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@flagrow/mason/./src/admin/addMasonFieldsPane.js","webpack://@flagrow/mason/./src/admin/addPermissions.js","webpack://@flagrow/mason/./src/admin/components/AnswerEdit.js","webpack://@flagrow/mason/./src/admin/components/FieldAnswersEdit.js","webpack://@flagrow/mason/./src/admin/components/FieldEdit.js","webpack://@flagrow/mason/./src/admin/components/MasonSettings.js","webpack://@flagrow/mason/./src/admin/index.js","webpack://@flagrow/mason/./src/admin/panes/MasonFieldsPane.js","webpack://@flagrow/mason/./src/lib/helpers/sortByAttribute.js","webpack://@flagrow/mason/./src/lib/models/Answer.js","webpack://@flagrow/mason/./src/lib/models/Field.js","webpack://@flagrow/mason/external \"flarum.core.compat['Component']\"","webpack://@flagrow/mason/external \"flarum.core.compat['Model']\"","webpack://@flagrow/mason/external \"flarum.core.compat['app']\"","webpack://@flagrow/mason/external \"flarum.core.compat['components/AdminLinkButton']\"","webpack://@flagrow/mason/external \"flarum.core.compat['components/AdminNav']\"","webpack://@flagrow/mason/external \"flarum.core.compat['components/Button']\"","webpack://@flagrow/mason/external \"flarum.core.compat['components/PermissionGrid']\"","webpack://@flagrow/mason/external \"flarum.core.compat['components/Select']\"","webpack://@flagrow/mason/external \"flarum.core.compat['components/Switch']\"","webpack://@flagrow/mason/external \"flarum.core.compat['extend']\"","webpack://@flagrow/mason/external \"flarum.core.compat['helpers/icon']\"","webpack://@flagrow/mason/external \"flarum.core.compat['utils/ItemList']\"","webpack://@flagrow/mason/external \"flarum.core.compat['utils/computed']\"","webpack://@flagrow/mason/external \"flarum.core.compat['utils/mixin']\"","webpack://@flagrow/mason/external \"flarum.core.compat['utils/saveSettings']\""],"names":["app","routes","path","component","MasonFieldsPane","extensionSettings","m","route","extend","AdminNav","prototype","items","add","AdminLinkButton","href","icon","children","description","translator","trans","PermissionGrid","groups","ItemList","label","permission","allowGuest","toArray","FieldEdit","init","answer","props","dirty","processing","view","is_suggested","onclick","newContent","prompt","content","updateAttribute","Switch","state","onchange","value","saveAnswer","Button","type","className","loading","disabled","readyToSave","bind","deleteAnswer","attribute","pushAttributes","save","data","attributes","then","redraw","err","confirm","Component","FieldAnswersEdit","field","new_content","showUserAnswers","config","$","sortable","handle","on","sorting","map","get","updateSort","exists","suggestedAnswers","userAnswers","all_answers","forEach","push","sortByAttribute","key","id","AnswerEdit","length","count","oninput","withAttr","placeholder","saveField","request","method","url","forum","apiEndpoint","result","store","pushPayload","sort","toggleFields","initNewField","createRecord","name","min_answers_count","max_answers_count","user_values_allowed","show_when_empty","validation","boxTitle","viewFields","a","iconPreview","deleteField","createNewRecord","preview","MasonSettings","fieldsSectionTitle","prop","settings","columnCount","labelsAsPlaceholders","fieldsInHero","hideEmptyFieldsSection","tagsAsFields","tagsFieldName","columnOptions","i","updateSetting","Select","options","setting","saveSettings","initializers","models","Field","Answer","addMasonFieldsPane","addPermissions","fields","all","fieldsList","attr","b","mixin","Model","hasOne","deleted_at","transformDate","hasMany","suggested_answers","required","computed","multiple"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./admin.js\");\n","export * from './src/admin';\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport AdminNav from 'flarum/components/AdminNav';\nimport AdminLinkButton from 'flarum/components/AdminLinkButton';\nimport MasonFieldsPane from './panes/MasonFieldsPane';\n\nexport default function () {\n    // create the route\n    app.routes['flagrow-mason-fields'] = {\n        path: '/flagrow/mason',\n        component: MasonFieldsPane.component(),\n    };\n\n    // bind the route we created to the three dots settings button\n    app.extensionSettings['flagrow-mason'] = () => m.route(app.route('flagrow-mason-fields'));\n\n    extend(AdminNav.prototype, 'items', items => {\n        // add the Image Upload tab to the admin navigation menu\n        items.add('flagrow-mason-fields', AdminLinkButton.component({\n            href: app.route('flagrow-mason-fields'),\n            icon: 'fas fa-dungeon',\n            children: 'Mason',\n            description: app.translator.trans('flagrow-mason.admin.menu.description'),\n        }));\n    });\n}\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport ItemList from 'flarum/utils/ItemList';\nimport PermissionGrid from 'flarum/components/PermissionGrid';\n\nexport default function () {\n    extend(PermissionGrid.prototype, 'permissionItems', groups => {\n        const items = new ItemList();\n\n        items.add('see-own-fields', {\n            icon: 'fas fa-eye',\n            label: app.translator.trans('flagrow-mason.admin.permissions.see-own-fields'),\n            permission: 'flagrow.mason.see-own-fields',\n        });\n        items.add('see-other-fields', {\n            icon: 'fas fa-eye',\n            label: app.translator.trans('flagrow-mason.admin.permissions.see-other-fields'),\n            permission: 'flagrow.mason.see-other-fields',\n            allowGuest: true,\n        });\n        items.add('fill-fields', {\n            icon: 'fas fa-tasks',\n            label: app.translator.trans('flagrow-mason.admin.permissions.fill-fields'),\n            permission: 'flagrow.mason.fill-fields',\n        });\n        items.add('update-own-fields', {\n            icon: 'fas fa-edit',\n            label: app.translator.trans('flagrow-mason.admin.permissions.update-own-fields'),\n            permission: 'flagrow.mason.update-own-fields',\n        });\n        items.add('update-other-fields', {\n            icon: 'fas fa-edit',\n            label: app.translator.trans('flagrow-mason.admin.permissions.update-other-fields'),\n            permission: 'flagrow.mason.update-other-fields',\n            allowGuest: true,\n        });\n        items.add('skip-required-fields', {\n            icon: 'fas fa-forward',\n            label: app.translator.trans('flagrow-mason.admin.permissions.skip-required-fields'),\n            permission: 'flagrow.mason.skip-required-fields',\n        });\n\n        groups.add('flagrow-mason', {\n            label: app.translator.trans('flagrow-mason.admin.permissions.mason-heading'),\n            children: items.toArray(),\n        });\n    });\n}\n","import app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport Switch from 'flarum/components/Switch';\n\nexport default class FieldEdit extends Component {\n    init() {\n        this.answer = this.props.answer;\n        this.dirty = false;\n        this.processing = false;\n    }\n\n    view() {\n        return m('form.Mason-Box', [\n            // Only suggested answers can be reordered\n            (this.answer.is_suggested() ? [\n                m('span.fa.fa-arrows.Mason-Box--handle.js-answer-handle'),\n                ' ',\n            ] : null),\n            m('span', {\n                onclick: () => {\n                    const newContent = prompt('Edit content', this.answer.content());\n\n                    if (newContent) {\n                        this.updateAttribute('content', newContent);\n                    }\n                },\n            }, [\n                this.answer.content(),\n                ' ',\n                icon('fas fa-pen'),\n            ]),\n            Switch.component({\n                state: this.answer.is_suggested(),\n                onchange: value => {\n                    this.updateAttribute('is_suggested', value);\n\n                    // Save right away, because updating the model with immediately trigger a redraw of the UI\n                    // And the unsaved state won't be preserved because the AnswerEdit component changes its place\n                    this.saveAnswer();\n                },\n                children: app.translator.trans('flagrow-mason.admin.fields.is_suggested'),\n            }),\n            m('.ButtonGroup', [\n                Button.component({\n                    type: 'submit',\n                    className: 'Button Button--primary',\n                    children: app.translator.trans('flagrow-mason.admin.buttons.save-answer'),\n                    loading: this.processing,\n                    disabled: !this.readyToSave(),\n                    onclick: this.saveAnswer.bind(this),\n                }),\n                Button.component({\n                    type: 'submit',\n                    className: 'Button Button--danger',\n                    children: app.translator.trans('flagrow-mason.admin.buttons.delete-answer'),\n                    loading: this.processing,\n                    onclick: this.deleteAnswer.bind(this),\n                }),\n            ]),\n        ]);\n    }\n\n    updateAttribute(attribute, value) {\n        this.answer.pushAttributes({\n            [attribute]: value,\n        });\n\n        this.dirty = true;\n    }\n\n    readyToSave() {\n        return this.dirty;\n    }\n\n    saveAnswer() {\n        this.processing = true;\n\n        this.answer.save(this.answer.data.attributes).then(() => {\n            this.processing = false;\n            this.dirty = false;\n\n            m.redraw();\n        }).catch(err => {\n            this.processing = false;\n\n            throw err;\n        });\n    }\n\n    deleteAnswer() {\n        if (!confirm(app.translator.trans('flagrow-mason.admin.messages.delete-answer-confirmation', {\n                content: this.answer.content(),\n            }))) {\n            return;\n        }\n\n        this.processing = true;\n\n        this.answer.delete().then(() => {\n            this.processing = false;\n\n            m.redraw();\n        }).catch(err => {\n            this.processing = false;\n\n            throw err;\n        });\n    }\n}\n","import app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport AnswerEdit from './AnswerEdit';\nimport sortByAttribute from './../../lib/helpers/sortByAttribute';\n\nexport default class FieldAnswersEdit extends Component {\n    init() {\n        this.field = this.props.field;\n        this.processing = false;\n        this.new_content = '';\n        this.showUserAnswers = false;\n    }\n\n    config() {\n        this.$('.js-answers-container')\n            .sortable({\n                handle: '.js-answer-handle',\n            })\n            .on('sortupdate', () => {\n                const sorting = this.$('.js-answer-data')\n                    .map(function () {\n                        return $(this).data('id');\n                    })\n                    .get();\n\n                this.updateSort(sorting);\n            });\n    }\n\n    view() {\n        if (!this.field.exists) {\n            return m('div', app.translator.trans('flagrow-mason.admin.fields.save-field-for-answers'));\n        }\n\n        let suggestedAnswers = [];\n        let userAnswers = [];\n\n        this.field.all_answers()\n            .forEach(answer => {\n                // When answers are deleted via store.delete() they stay as an \"undefined\" relationship\n                // We ignore these deleted answers\n                if (typeof answer === 'undefined') {\n                    return;\n                }\n\n                if (answer.is_suggested()) {\n                    suggestedAnswers.push(answer);\n                } else {\n                    userAnswers.push(answer);\n                }\n            });\n\n        return m('div', [\n            m('.Mason-Container.js-answers-container', sortByAttribute(suggestedAnswers).map(\n                answer => m('.js-answer-data', {\n                    key: answer.id(),\n                    'data-id': answer.id(),\n                }, AnswerEdit.component({\n                    answer,\n                }))\n            )),\n            (userAnswers.length ? [\n                m('.Button.Button--block.Mason-Box-Header', {\n                    onclick: () => {\n                        this.showUserAnswers = !this.showUserAnswers;\n                    },\n                }, [\n                    m('.Mason-Box-Header-Title', app.translator.trans('flagrow-mason.admin.buttons.show-user-answers', {\n                        count: userAnswers.length,\n                    })),\n                    m('div', [\n                        icon('fas fa-chevron-' + (this.showUserAnswers ? 'up' : 'down')),\n                    ]),\n                ]),\n                // The list of user answers can't be re-ordered\n                (this.showUserAnswers ? m('.Mason-Container', sortByAttribute(userAnswers, 'content').map(\n                    answer => m('div', {\n                        key: answer.id(),\n                    }, AnswerEdit.component({\n                        answer,\n                    }))\n                )) : null),\n            ] : null),\n            m('form', [\n                m('.Form-group', [\n                    m('label', 'New answer'),\n                    m('input.FormControl', {\n                        value: this.new_content,\n                        oninput: m.withAttr('value', value => {\n                            this.new_content = value;\n                        }),\n                        placeholder: app.translator.trans('flagrow-mason.admin.fields.new-answer-placeholder'),\n                    }),\n                ]),\n                m('.Form-group', [\n                    Button.component({\n                        type: 'submit',\n                        className: 'Button Button--primary',\n                        children: app.translator.trans('flagrow-mason.admin.buttons.add-answer'),\n                        loading: this.processing,\n                        disabled: !this.new_content,\n                        onclick: this.saveField.bind(this),\n                    }),\n                ]),\n            ]),\n        ]);\n    }\n\n    saveField() {\n        this.processing = true;\n\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + this.field.apiEndpoint() + '/answers',\n            data: {\n                data: {\n                    attributes: {\n                        content: this.new_content,\n                        is_suggested: true,\n                    },\n                },\n            },\n        }).then(result => {\n            app.store.pushPayload(result);\n\n            this.new_content = '';\n            this.processing = false;\n            m.redraw();\n        });\n    }\n\n    updateSort(sorting) {\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + this.field.apiEndpoint() + '/answers/order',\n            data: {\n                sort: sorting,\n            },\n        }).then(result => {\n            // Update sort attributes\n            app.store.pushPayload(result);\n            m.redraw();\n        });\n    }\n}\n","import app from 'flarum/app';\nimport icon from 'flarum/helpers/icon';\nimport Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport Switch from 'flarum/components/Switch';\nimport FieldAnswersEdit from './FieldAnswersEdit';\n\nexport default class FieldEdit extends Component {\n    init() {\n        this.field = this.props.field;\n        this.dirty = false;\n        this.processing = false;\n        this.toggleFields = false;\n\n        if (this.field === null) {\n            this.initNewField();\n        }\n    }\n\n    initNewField() {\n        this.field = app.store.createRecord('flagrow-mason-field', {\n            attributes: {\n                name: '',\n                description: '',\n                min_answers_count: 0,\n                max_answers_count: 1,\n                user_values_allowed: false,\n                show_when_empty: false,\n                validation: '',\n                icon: '',\n            },\n        });\n    }\n\n    boxTitle() {\n        if (this.field.exists) {\n            return this.field.name();\n        }\n\n        return app.translator.trans('flagrow-mason.admin.buttons.new-field');\n    }\n\n    view() {\n        return m('.Mason-Box', [\n            (this.field.exists ? m('span.fa.fa-arrows.Mason-Box--handle.js-field-handle') : null),\n            m('.Button.Button--block.Mason-Box-Header', {\n                onclick: () => {\n                    this.toggleFields = !this.toggleFields;\n                },\n            }, [\n                m('.Mason-Box-Header-Title', this.boxTitle()),\n                m('div', [\n                    (this.field.exists ? [\n                        app.translator.trans('flagrow-mason.admin.buttons.edit-field'),\n                        ' ',\n                    ] : null),\n                    icon('fas fa-chevron-' + (this.toggleFields ? 'up' : 'down')),\n                ]),\n            ]),\n            (this.toggleFields ? this.viewFields() : null),\n        ]);\n    }\n\n    viewFields() {\n        return m('form', [\n            m('.Mason-Box--row', [\n                m('.Mason-Box--column', [\n                    m('h4', 'Field settings'),\n                    m('.Form-group', [\n                        m('label', app.translator.trans('flagrow-mason.admin.fields.name')),\n                        m('input.FormControl', {\n                            value: this.field.name(),\n                            oninput: m.withAttr('value', this.updateAttribute.bind(this, 'name')),\n                        }),\n                        m('.helpText', app.translator.trans('flagrow-mason.admin.fields.name-help')),\n                    ]),\n                    m('.Form-group', [\n                        m('label', app.translator.trans('flagrow-mason.admin.fields.description')),\n                        m('input.FormControl', {\n                            value: this.field.description(),\n                            oninput: m.withAttr('value', this.updateAttribute.bind(this, 'description')),\n                        }),\n                        m('.helpText', app.translator.trans('flagrow-mason.admin.fields.description-help')),\n                    ]),\n                    m('.Form-group', [\n                        m('label', [\n                            // TODO: while multiple answers are still in the work, show the \"min answers\" field as a checkbox\n                            Switch.component({\n                                state: this.field.min_answers_count() === 1,\n                                onchange: value => {\n                                    this.updateAttribute('min_answers_count', value ? 1 : 0);\n                                },\n                                children: app.translator.trans('flagrow-mason.admin.fields.required'),\n                            }),\n                        ]),\n                    ]),\n                    /*m('.Form-group', [\n                        m('label', app.translator.trans('flagrow-mason.admin.fields.min_answers_count')),\n                        m('input.FormControl', {\n                            type: 'number',\n                            min: 0,\n                            max: 1, // TODO: remove when multiple answers is ready\n                            value: this.field.min_answers_count(),\n                            oninput: m.withAttr('value', this.updateAttribute.bind(this, 'min_answers_count')),\n                        }),\n                    ]),\n                    m('.Form-group', [\n                        m('label', app.translator.trans('flagrow-mason.admin.fields.max_answers_count')),\n                        m('input.FormControl', {\n                            type: 'number',\n                            min: 1,\n                            disabled: true, // TODO: remove when multiple answers is ready\n                            value: this.field.max_answers_count(),\n                            oninput: m.withAttr('value', this.updateAttribute.bind(this, 'max_answers_count')),\n                        }),\n                    ]),*/\n                    m('.Form-group', [\n                        m('label', [\n                            Switch.component({\n                                state: this.field.show_when_empty(),\n                                onchange: this.updateAttribute.bind(this, 'show_when_empty'),\n                                children: app.translator.trans('flagrow-mason.admin.fields.show_when_empty'),\n                            }),\n                        ]),\n                        m('.helpText', app.translator.trans('flagrow-mason.admin.fields.show_when_empty-help')),\n                    ]),\n                    m('.Form-group', [\n                        m('label', [\n                            Switch.component({\n                                state: this.field.user_values_allowed(),\n                                onchange: this.updateAttribute.bind(this, 'user_values_allowed'),\n                                children: app.translator.trans('flagrow-mason.admin.fields.user_values_allowed'),\n                            }),\n                        ]),\n                        m('.helpText', app.translator.trans('flagrow-mason.admin.fields.user_values_allowed-help')),\n                    ]),\n                    m('.Form-group', [\n                        m('label', app.translator.trans('flagrow-mason.admin.fields.validation')),\n                        m('input.FormControl', {\n                            disabled: !this.field.user_values_allowed(),\n                            placeholder: this.field.user_values_allowed() ? '' : app.translator.trans('flagrow-mason.admin.fields.enable-user-values-for-validation'),\n                            value: this.field.validation(),\n                            oninput: m.withAttr('value', this.updateAttribute.bind(this, 'validation')),\n                        }),\n                        m('.helpText', app.translator.trans('flagrow-mason.admin.fields.validation-help', {\n                            a: m('a[href=https://laravel.com/docs/5.1/validation#available-validation-rules][_target=blank]'),\n                        })),\n                    ]),\n                    m('.Form-group', [\n                        m('label', [\n                            app.translator.trans('flagrow-mason.admin.fields.icon'),\n                            this.iconPreview(this.field.icon()),\n                        ]),\n                        m('input.FormControl', {\n                            value: this.field.icon(),\n                            oninput: m.withAttr('value', this.updateAttribute.bind(this, 'icon')),\n                        }),\n                        m('.helpText', app.translator.trans('flagrow-mason.admin.fields.icon-help', {\n                            a: m('a[href=https://fontawesome.com/icons?m=free][_target=blank]'),\n                        })),\n                    ]),\n                ]),\n                m('.Mason-Box--column', [\n                    m('h4', 'Field answers'),\n                    m('.Form-group', FieldAnswersEdit.component({\n                        field: this.field,\n                    })),\n                ]),\n            ]),\n            m('li.ButtonGroup', [\n                Button.component({\n                    type: 'submit',\n                    className: 'Button Button--primary',\n                    children: app.translator.trans('flagrow-mason.admin.buttons.' + (this.field.exists ? 'save' : 'add') + '-field'),\n                    loading: this.processing,\n                    disabled: !this.readyToSave(),\n                    onclick: this.saveField.bind(this),\n                }),\n                (this.field.exists ? Button.component({\n                    type: 'submit',\n                    className: 'Button Button--danger',\n                    children: app.translator.trans('flagrow-mason.admin.buttons.delete-field'),\n                    loading: this.processing,\n                    onclick: this.deleteField.bind(this),\n                }) : ''),\n            ]),\n        ]);\n    }\n\n    updateAttribute(attribute, value) {\n        this.field.pushAttributes({\n            [attribute]: value,\n        });\n\n        this.dirty = true;\n    }\n\n    readyToSave() {\n        // TODO: check required fields\n        return this.dirty;\n    }\n\n    saveField() {\n        this.processing = true;\n\n        const createNewRecord = !this.field.exists;\n\n        this.field.save(this.field.data.attributes).then(() => {\n            if (createNewRecord) {\n                this.initNewField();\n                this.toggleFields = false;\n            }\n\n            this.processing = false;\n            this.dirty = false;\n\n            m.redraw();\n        }).catch(err => {\n            this.processing = false;\n\n            throw err;\n        });\n    }\n\n    deleteField() {\n        if (!confirm(app.translator.trans('flagrow-mason.admin.messages.delete-field-confirmation', {\n                name: this.field.name(),\n            }))) {\n            return;\n        }\n\n        this.processing = true;\n\n        this.field.delete().then(() => {\n            this.processing = false;\n\n            m.redraw();\n        }).catch(err => {\n            this.processing = false;\n\n            throw err;\n        });\n    }\n\n    iconPreview(value) {\n        if (!value) {\n            return '';\n        }\n\n        return [\n            ' (',\n            app.translator.trans('flagrow-mason.admin.fields.icon-preview', {\n                preview: icon(value),\n            }),\n            ')',\n        ];\n    }\n}\n","import app from 'flarum/app';\nimport saveSettings from \"flarum/utils/saveSettings\";\nimport Component from 'flarum/Component';\nimport Select from 'flarum/components/Select';\nimport Switch from 'flarum/components/Switch';\n\nexport default class MasonSettings extends Component {\n    init() {\n        this.fieldsSectionTitle = m.prop(app.data.settings['flagrow.mason.fields-section-title'] || '');\n        this.columnCount = m.prop(app.data.settings['flagrow.mason.column-count'] || 1);\n        this.labelsAsPlaceholders = m.prop(app.data.settings['flagrow.mason.labels-as-placeholders'] > 0);\n        this.fieldsInHero = m.prop(app.data.settings['flagrow.mason.fields-in-hero'] > 0);\n        this.hideEmptyFieldsSection = m.prop(app.data.settings['flagrow.mason.hide-empty-fields-section'] > 0);\n        this.tagsAsFields = m.prop(app.data.settings['flagrow.mason.tags-as-fields'] > 0);\n        this.tagsFieldName = m.prop(app.data.settings['flagrow.mason.tags-field-name'] || '');\n\n        this.columnOptions = {};\n\n        for (let i = 1; i <= 3; i++) {\n            this.columnOptions[i] = app.translator.trans('flagrow-mason.admin.settings.n-columns', {count: i});\n        }\n    }\n\n    view() {\n        return m('.Mason-Container', [\n            m('.Form-group', [\n                m('label', app.translator.trans('flagrow-mason.admin.settings.fields-section-title')),\n                m('input.FormControl', {\n                    value: this.fieldsSectionTitle(),\n                    placeholder: app.translator.trans('flagrow-mason.admin.settings.fields-section-title-placeholder'),\n                    onchange: m.withAttr('value', this.updateSetting.bind(this, this.fieldsSectionTitle, 'flagrow.mason.fields-section-title')),\n                }),\n                m('.helpText', app.translator.trans('flagrow-mason.admin.settings.fields-section-title-help')),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans('flagrow-mason.admin.settings.column-count')),\n                Select.component({\n                    options: this.columnOptions,\n                    value: this.columnCount(),\n                    onchange: this.updateSetting.bind(this, this.columnCount, 'flagrow.mason.column-count'),\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', Switch.component({\n                    state: this.labelsAsPlaceholders(),\n                    onchange: this.updateSetting.bind(this, this.labelsAsPlaceholders, 'flagrow.mason.labels-as-placeholders'),\n                    children: app.translator.trans('flagrow-mason.admin.settings.labels-as-placeholders'),\n                })),\n                m('.helpText', app.translator.trans('flagrow-mason.admin.settings.labels-as-placeholders-help')),\n            ]),\n            m('.Form-group', [\n                m('label', Switch.component({\n                    state: this.fieldsInHero(),\n                    onchange: this.updateSetting.bind(this, this.fieldsInHero, 'flagrow.mason.fields-in-hero'),\n                    children: app.translator.trans('flagrow-mason.admin.settings.fields-in-hero'),\n                })),\n            ]),\n            m('.Form-group', [\n                m('label', Switch.component({\n                    state: this.hideEmptyFieldsSection(),\n                    onchange: this.updateSetting.bind(this, this.hideEmptyFieldsSection, 'flagrow.mason.hide-empty-fields-section'),\n                    children: app.translator.trans('flagrow-mason.admin.settings.hide-empty-fields-section'),\n                })),\n                m('.helpText', app.translator.trans('flagrow-mason.admin.settings.hide-empty-fields-section-help')),\n            ]),\n            m('.Form-group', [\n                m('label', Switch.component({\n                    state: this.tagsAsFields(),\n                    onchange: this.updateSetting.bind(this, this.tagsAsFields, 'flagrow.mason.tags-as-fields'),\n                    children: app.translator.trans('flagrow-mason.admin.settings.tags-as-field'),\n                })),\n                m('.helpText', app.translator.trans('flagrow-mason.admin.settings.tags-as-field-help')),\n            ]),\n            (this.tagsAsFields() ? m('.Form-group', [\n                m('label', app.translator.trans('flagrow-mason.admin.settings.tags-field-name')),\n                m('input.FormControl', {\n                    value: this.tagsFieldName(),\n                    placeholder: app.translator.trans('flagrow-mason.admin.settings.tags-field-name-placeholder'),\n                    onchange: m.withAttr('value', this.updateSetting.bind(this, this.tagsFieldName, 'flagrow.mason.tags-field-name')),\n                }),\n            ]) : null),\n        ]);\n    }\n\n    /**\n     * Updates setting in database.\n     * @param prop\n     * @param setting\n     * @param value\n     */\n    updateSetting(prop, setting, value) {\n        saveSettings({\n            [setting]: value\n        });\n\n        prop(value)\n    }\n}\n","import app from 'flarum/app';\nimport Answer from './../lib/models/Answer';\nimport Field from './../lib/models/Field';\nimport addMasonFieldsPane from './addMasonFieldsPane';\nimport addPermissions from './addPermissions';\n\napp.initializers.add('flagrow-mason', app => {\n    app.store.models['flagrow-mason-field'] = Field;\n    app.store.models['flagrow-mason-answer'] = Answer;\n\n    addMasonFieldsPane();\n    addPermissions();\n});\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport FieldEdit from './../components/FieldEdit';\nimport sortByAttribute from './../../lib/helpers/sortByAttribute';\nimport MasonSettings from './../components/MasonSettings';\n\nexport default class MasonFieldsPane extends Component {\n    init() {\n        app.request({\n            method: 'GET',\n            url: app.forum.attribute('apiUrl') + '/flagrow/mason/fields',\n        }).then(result => {\n            app.store.pushPayload(result);\n            m.redraw();\n        });\n    }\n\n    config() {\n        this.$('.js-fields-container')\n            .sortable({\n                handle: '.js-field-handle',\n            })\n            .on('sortupdate', () => {\n                const sorting = this.$('.js-field-data')\n                    .map(function () {\n                        return $(this).data('id');\n                    })\n                    .get();\n\n                this.updateSort(sorting);\n            });\n    }\n\n    view() {\n        const fields = app.store.all('flagrow-mason-field');\n\n        let fieldsList = [];\n\n        sortByAttribute(fields)\n            .forEach(field => {\n                // Build array of fields to show.\n                fieldsList.push(m('.js-field-data', {\n                    key: field.id(),\n                    'data-id': field.id(),\n                }, FieldEdit.component({\n                    field,\n                })));\n            });\n\n        return m('.container', [\n            m('h2', app.translator.trans('flagrow-mason.admin.titles.fields')),\n            m('.Mason-Container', [\n                m('.js-fields-container', fieldsList),\n                FieldEdit.component({\n                    key: 'new',\n                    field: null,\n                }),\n            ]),\n            m('h2', app.translator.trans('flagrow-mason.admin.titles.settings')),\n            MasonSettings.component(),\n        ]);\n    }\n\n    updateSort(sorting) {\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + '/flagrow/mason/fields/order',\n            data: {\n                sort: sorting,\n            },\n        }).then(result => {\n            // Update sort attributes\n            app.store.pushPayload(result);\n            m.redraw();\n        });\n    }\n}\n","export default function (items, attr = 'sort') {\n    return items.sort(\n        (a, b) => a[attr]() - b[attr]()\n    );\n}\n","import app from 'flarum/app';\nimport Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class Answer extends mixin(Model, {\n    content: Model.attribute('content'),\n    is_suggested: Model.attribute('is_suggested'),\n    sort: Model.attribute('sort'),\n    field: Model.hasOne('field'),\n}) {\n    /**\n     * @inheritDoc\n     */\n    apiEndpoint() {\n        return '/flagrow/mason/answers' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","import app from 'flarum/app';\nimport Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\nimport computed from 'flarum/utils/computed';\n\nexport default class Field extends mixin(Model, {\n    name: Model.attribute('name'),\n    description: Model.attribute('description'),\n    min_answers_count: Model.attribute('min_answers_count'),\n    max_answers_count: Model.attribute('max_answers_count'),\n    show_when_empty: Model.attribute('show_when_empty'),\n    user_values_allowed: Model.attribute('user_values_allowed'),\n    validation: Model.attribute('validation'),\n    icon: Model.attribute('icon'),\n    sort: Model.attribute('sort'),\n    deleted_at: Model.attribute('deleted_at', Model.transformDate),\n    all_answers: Model.hasMany('all_answers'),\n    suggested_answers: Model.hasMany('suggested_answers'),\n    required: computed('min_answers_count', min_answers_count => min_answers_count > 0),\n    multiple: computed('max_answers_count', max_answers_count => max_answers_count > 1),\n}) {\n    /**\n     * @inheritDoc\n     */\n    apiEndpoint() {\n        return '/flagrow/mason/fields' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['components/AdminLinkButton'];","module.exports = flarum.core.compat['components/AdminNav'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/PermissionGrid'];","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['utils/computed'];","module.exports = flarum.core.compat['utils/mixin'];","module.exports = flarum.core.compat['utils/saveSettings'];"],"sourceRoot":""}